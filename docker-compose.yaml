version: '1.0'

services:
  webserver:
    image: nginx:alpine
    container_name: poolfindr-webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./apps/poolfindr-backend:/var/www/html
      - ./configs/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - "poolfindr-network"

  backend:
    image: poolfindr-backend:latest
    container_name: poolfindr-backend
    volumes:
      - ./apps/poolfindr-backend:/var/www/html
    ports:
      - "8000:80"
    networks:
      - "poolfindr-network"
    environment:
      WEB_DOCUMENT_ROOT: /var/www/html/public

  frontend:
    container_name: poolfindr-frontend
    image: poolfindr-frontend:latest
    volumes:
      - ./apps/poolfindr-frontend:/var/www/
      - ./apps/poolfindr-frontend/node_modules:/var/www/html/node_modules
    ports:
      - "3000:3000"
    networks:
      - "poolfindr-network"

  # Database
  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: poolfindr-mysql
    ports:
        - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
        MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ROOT_HOST: '%'
        MYSQL_DATABASE: '${DB_DATABASE}'
        MYSQL_USER: '${DB_USERNAME}'
        MYSQL_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
        - 'mysql_volume:/var/lib/mysql'
    networks:
        - "poolfindr-network"

  # Redis for caching
  redis:
    image: redis:alpine
    container_name: poolfindr-redis
    restart: unless-stopped
    volumes:
      - redis_volume:/data
    ports:
      - "6379:6379"
    networks:
      - "poolfindr-network"

networks:
  poolfindr-network:
    driver: bridge

volumes:
  app-data:
  dbdata:
  mysql_volume:
  redis_volume:
  mysql: